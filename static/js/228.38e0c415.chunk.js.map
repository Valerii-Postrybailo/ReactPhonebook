{"version":3,"file":"static/js/228.38e0c415.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsTable/ContactsTable.styled.js","components/EditContactForm/EditContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/ContactsTable/ContactsTable.jsx","components/PhoneBook/PhoneBook.jsx","pages/Phones.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TextFieldStyled = styled(TextField)`\n  width: 300px;\n  margin-bottom: '25px';\n`;","import React from 'react';\nimport { TextFieldStyled } from './Filter.styled';\n//\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport debounce from 'lodash.debounce';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onFilterChange = event => {\n    const value = event.target.value;\n    dispatch(setFilter(value));\n  };\n\n  const onFilterChangeDebounced = debounce(onFilterChange, 500);\n\n  return (\n    <TextFieldStyled\n      id=\"search\"\n      name=\"search\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      sx={{ marginBottom: '25px', width: '300px' }}\n      onChange={onFilterChangeDebounced}\n    />\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const FormStyled = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: fit-content;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import React from 'react';\n// import { customAlphabet } from 'nanoid';\nimport * as Yup from 'yup';\nimport { ButtonStyled, FormStyled } from './ContactForm.styled';\nimport AddIcon from '@mui/icons-material/Add';\nimport { TextField } from '@mui/material';\n//\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\n\n//\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .min(3, 'Minimum 3 letters!')\n    .required('This field is required!'),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .max(13, 'Maximum 13 numbers!')\n    .required('This field is required!'),\n}).required();\n\nexport default function ContactForm() {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onFormSubmit = data => {\n    const { name, number } = data;\n    const contact = {\n      name,\n      number,\n    };\n    if (contacts.find(contact => contact.name === name)) {\n      toast.warning(`${name} is already in contacts`, {});\n      return;\n    }\n    dispatch(addContact(contact));\n  };\n\n  const onFormError = error => {\n    toast.error(error);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit(onFormSubmit, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"number\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.number && true}\n              helperText={errors.number?.message}\n            />\n          )}\n        />\n\n        <ButtonStyled type=\"submit\" variant=\"outlined\" startIcon={<AddIcon />}>\n          Add contact\n        </ButtonStyled>\n      </FormStyled>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n}","import TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontSize: theme.typography.htmlFontSize,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: theme.typography.fontSize,\n  },\n  '&.MuiTableCell-body:nth-of-type(2)': {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(even)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const FormStyled = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: fit-content;\n`;","import React from 'react';\nimport * as Yup from 'yup';\nimport { ButtonStyled, FormStyled } from './EditContactForm.styled';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { TextField, Typography } from '@mui/material';\n//\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\n\nimport { editContact } from 'redux/contacts/operations';\nimport Box from 'components/Box';\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .min(3, 'Minimum 3 letters!')\n    .required('This field is required!'),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .max(13, 'Maximum 13 numbers!')\n    .required('This field is required!'),\n}).required();\n\nexport default function EditContactForm({ contact, setOpen }) {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: contact?.name,\n      number: contact?.number,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = data => {\n    const { name, number } = data;\n    const editedContact = {\n      id: contact.id,\n      name,\n      number,\n    };\n    dispatch(editContact(editedContact));\n    setOpen(false);\n  };\n\n  const onFormError = error => {\n    toast.error(error);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return (\n    <>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Edit contact\n      </Typography>\n      <FormStyled onSubmit={handleSubmit(onFormSubmit, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"number\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.number && true}\n              helperText={errors.number?.message}\n            />\n          )}\n        />\n        <Box flexDirection=\"row\" gridGap=\"10px\" justifyContent=\"end\">\n          <ButtonStyled variant=\"contained\" onClick={() => setOpen(false)}>\n            Cancel\n          </ButtonStyled>\n          <ButtonStyled\n            type=\"submit\"\n            variant=\"outlined\"\n            startIcon={<SaveIcon />}\n          >\n            Save\n          </ButtonStyled>\n        </Box>\n      </FormStyled>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n}","import {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport { Paper, Button, Dialog, DialogContent } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { StyledTableCell, StyledTableRow } from './ContactsTable.styled';\n//\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Box from 'components/Box';\nimport { useState } from 'react';\nimport EditContactForm from 'components/EditContactForm';\n\nfunction ContactsTable() {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [contact, setContact] = useState(null);\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  const onDelete = ({ id }) => {\n    dispatch(deleteContact(id));\n  };\n\n  const openContactForm = contact => {\n    setContact(contact);\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper} sx={{ maxWidth: '900px' }}>\n        <Table aria-label=\"contacts table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Contact ID</StyledTableCell>\n              <StyledTableCell align=\"right\">Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Phone</StyledTableCell>\n              <StyledTableCell align=\"right\"></StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts.map(({ id, name, number }) => (\n              <StyledTableRow key={id}>\n                <StyledTableCell scope=\"row\">{id}</StyledTableCell>\n                <StyledTableCell align=\"right\">{name}</StyledTableCell>\n                <StyledTableCell align=\"right\">{number}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Box flexDirection=\"row\" gridGap=\"5px\">\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<EditIcon />}\n                      onClick={() => openContactForm({ id, name, number })}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => onDelete({ id })}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog open={open}>\n        <DialogContent>\n          <EditContactForm contact={contact} setOpen={setOpen} />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nexport default ContactsTable;","import React, { useEffect } from 'react';\nimport Filter from 'components/Filter';\nimport ContactForm from 'components/ContactForm';\nimport Box from '../Box';\nimport ContactsTable from 'components/ContactsTable';\nimport { useTheme } from '@mui/material/styles';\nimport { ToastContainer } from 'react-toastify';\n//\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\n\nexport default function PhoneBook() {\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Box>\n      <Box\n        as=\"h1\"\n        pt=\"20px\"\n        pb=\"10px\"\n        margin=\"0 auto\"\n        color={theme.palette.text.primary}\n      >\n        Phonebook\n      </Box>\n      <ContactForm />\n      <Box as=\"h2\" mb=\"0\" color={theme.palette.text.primary} >\n        Contacts\n      </Box>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactsTable />\n\n      <ToastContainer position=\"top-right\" autoClose={2000} theme=\"colored\" />\n    </Box>\n  );\n}","import PhoneBook from 'components/PhoneBook';\n\nexport default function Phones() {\n  return <PhoneBook />;\n}"],"names":["TextFieldStyled","styled","TextField","dispatch","useDispatch","onFilterChangeDebounced","debounce","event","value","target","setFilter","id","name","label","variant","sx","marginBottom","width","onChange","FormStyled","ButtonStyled","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","toLowerCase","includes","schema","Yup","min","required","number","matches","max","ContactForm","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","reset","formState","errors","isSubmitSuccessful","useSelector","React","onSubmit","data","contact","find","toast","addContact","render","field","size","helperText","message","type","startIcon","Add","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","StyledTableCell","TableCell","tableCellClasses","backgroundColor","palette","primary","main","color","common","white","fontSize","typography","htmlFontSize","fontWeight","fontWeightBold","StyledTableRow","TableRow","action","hover","border","EditContactForm","setOpen","Typography","align","gutterBottom","editedContact","editContact","Box","flexDirection","gridGap","justifyContent","onClick","Save","useState","open","setContact","TableContainer","component","Paper","maxWidth","Table","TableHead","TableBody","map","scope","Edit","openContactForm","Delete","deleteContact","onDelete","Dialog","DialogContent","PhoneBook","useTheme","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","as","pt","pb","margin","text","mb","Phones"],"sourceRoot":""}